//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecipeBook.Data.RecipeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeDto", Namespace="http://schemas.datacontract.org/2004/07/RecipeBook.Service.Data.ModelsDto")]
    [System.SerializableAttribute()]
    public partial class RecipeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RecipeBook.Data.RecipeService.RecipeDetailsDto DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RecipeBook.Data.RecipeService.RecipeDetailsDto Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoUrl {
            get {
                return this.PhotoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoUrlField, value) != true)) {
                    this.PhotoUrlField = value;
                    this.RaisePropertyChanged("PhotoUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeId {
            get {
                return this.RecipeIdField;
            }
            set {
                if ((this.RecipeIdField.Equals(value) != true)) {
                    this.RecipeIdField = value;
                    this.RaisePropertyChanged("RecipeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecipeName {
            get {
                return this.RecipeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeNameField, value) != true)) {
                    this.RecipeNameField = value;
                    this.RaisePropertyChanged("RecipeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeDetailsDto", Namespace="http://schemas.datacontract.org/2004/07/RecipeBook.Service.Data.ModelsDto")]
    [System.SerializableAttribute()]
    public partial class RecipeDetailsDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CookingTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CookingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StepsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CookingTemperature {
            get {
                return this.CookingTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.CookingTemperatureField, value) != true)) {
                    this.CookingTemperatureField = value;
                    this.RaisePropertyChanged("CookingTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CookingTime {
            get {
                return this.CookingTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CookingTimeField, value) != true)) {
                    this.CookingTimeField = value;
                    this.RaisePropertyChanged("CookingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeId {
            get {
                return this.RecipeIdField;
            }
            set {
                if ((this.RecipeIdField.Equals(value) != true)) {
                    this.RecipeIdField = value;
                    this.RaisePropertyChanged("RecipeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Steps {
            get {
                return this.StepsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepsField, value) != true)) {
                    this.StepsField = value;
                    this.RaisePropertyChanged("Steps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IngredientDto", Namespace="http://schemas.datacontract.org/2004/07/RecipeBook.Service.Data.ModelsDto")]
    [System.SerializableAttribute()]
    public partial class IngredientDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IngredientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IngredientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IngredientId {
            get {
                return this.IngredientIdField;
            }
            set {
                if ((this.IngredientIdField.Equals(value) != true)) {
                    this.IngredientIdField = value;
                    this.RaisePropertyChanged("IngredientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IngredientName {
            get {
                return this.IngredientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientNameField, value) != true)) {
                    this.IngredientNameField = value;
                    this.RaisePropertyChanged("IngredientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipeIngredientDto", Namespace="http://schemas.datacontract.org/2004/07/RecipeBook.Service.Data.ModelsDto")]
    [System.SerializableAttribute()]
    public partial class RecipeIngredientDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IngredientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IngredientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecipeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IngredientId {
            get {
                return this.IngredientIdField;
            }
            set {
                if ((this.IngredientIdField.Equals(value) != true)) {
                    this.IngredientIdField = value;
                    this.RaisePropertyChanged("IngredientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IngredientName {
            get {
                return this.IngredientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientNameField, value) != true)) {
                    this.IngredientNameField = value;
                    this.RaisePropertyChanged("IngredientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecipeId {
            get {
                return this.RecipeIdField;
            }
            set {
                if ((this.RecipeIdField.Equals(value) != true)) {
                    this.RecipeIdField = value;
                    this.RaisePropertyChanged("RecipeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((object.ReferenceEquals(this.WeightField, value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RecipeService.IRecipeService")]
    public interface IRecipeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipes", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesResponse")]
        RecipeBook.Data.RecipeService.RecipeDto[] GetRecipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipes", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetIngredients", ReplyAction="http://tempuri.org/IRecipeService/GetIngredientsResponse")]
        RecipeBook.Data.RecipeService.IngredientDto[] GetIngredients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetIngredients", ReplyAction="http://tempuri.org/IRecipeService/GetIngredientsResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.IngredientDto[]> GetIngredientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetDedails", ReplyAction="http://tempuri.org/IRecipeService/GetDedailsResponse")]
        RecipeBook.Data.RecipeService.RecipeDetailsDto GetDedails(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetDedails", ReplyAction="http://tempuri.org/IRecipeService/GetDedailsResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDetailsDto> GetDedailsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipeIngredients", ReplyAction="http://tempuri.org/IRecipeService/GetRecipeIngredientsResponse")]
        RecipeBook.Data.RecipeService.RecipeIngredientDto[] GetRecipeIngredients(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipeIngredients", ReplyAction="http://tempuri.org/IRecipeService/GetRecipeIngredientsResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeIngredientDto[]> GetRecipeIngredientsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByIngredient", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByIngredientResponse")]
        RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByIngredient(string ingredientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByIngredient", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByIngredientResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByIngredientAsync(string ingredientName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByName", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByNameResponse")]
        RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByName(string recipeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByName", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByNameResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByNameAsync(string recipeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByCategory", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByCategoryResponse")]
        RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByCategory(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/GetRecipesByCategory", ReplyAction="http://tempuri.org/IRecipeService/GetRecipesByCategoryResponse")]
        System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByCategoryAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddIngredient", ReplyAction="http://tempuri.org/IRecipeService/AddIngredientResponse")]
        void AddIngredient(RecipeBook.Data.RecipeService.IngredientDto ingredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddIngredient", ReplyAction="http://tempuri.org/IRecipeService/AddIngredientResponse")]
        System.Threading.Tasks.Task AddIngredientAsync(RecipeBook.Data.RecipeService.IngredientDto ingredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteIngredient", ReplyAction="http://tempuri.org/IRecipeService/DeleteIngredientResponse")]
        void DeleteIngredient(int ingredientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteIngredient", ReplyAction="http://tempuri.org/IRecipeService/DeleteIngredientResponse")]
        System.Threading.Tasks.Task DeleteIngredientAsync(int ingredientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateIngredient", ReplyAction="http://tempuri.org/IRecipeService/UpdateIngredientResponse")]
        void UpdateIngredient(RecipeBook.Data.RecipeService.IngredientDto ingredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateIngredient", ReplyAction="http://tempuri.org/IRecipeService/UpdateIngredientResponse")]
        System.Threading.Tasks.Task UpdateIngredientAsync(RecipeBook.Data.RecipeService.IngredientDto ingredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipeIngredient", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeIngredientResponse")]
        void AddRecipeIngredient(RecipeBook.Data.RecipeService.RecipeIngredientDto recipeIngredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipeIngredient", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeIngredientResponse")]
        System.Threading.Tasks.Task AddRecipeIngredientAsync(RecipeBook.Data.RecipeService.RecipeIngredientDto recipeIngredient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipeIngredient", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeIngredientResponse")]
        void DeleteRecipeIngredient(int recipeId, int ingredientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipeIngredient", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeIngredientResponse")]
        System.Threading.Tasks.Task DeleteRecipeIngredientAsync(int recipeId, int ingredientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipeIngredients", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeIngredientsResponse")]
        void DeleteRecipeIngredients(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipeIngredients", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeIngredientsResponse")]
        System.Threading.Tasks.Task DeleteRecipeIngredientsAsync(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipe", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeResponse")]
        int AddRecipe(RecipeBook.Data.RecipeService.RecipeDto recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipe", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeResponse")]
        System.Threading.Tasks.Task<int> AddRecipeAsync(RecipeBook.Data.RecipeService.RecipeDto recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipe", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeResponse")]
        void DeleteRecipe(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/DeleteRecipe", ReplyAction="http://tempuri.org/IRecipeService/DeleteRecipeResponse")]
        System.Threading.Tasks.Task DeleteRecipeAsync(int recipeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateRecipe", ReplyAction="http://tempuri.org/IRecipeService/UpdateRecipeResponse")]
        void UpdateRecipe(RecipeBook.Data.RecipeService.RecipeDto recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateRecipe", ReplyAction="http://tempuri.org/IRecipeService/UpdateRecipeResponse")]
        System.Threading.Tasks.Task UpdateRecipeAsync(RecipeBook.Data.RecipeService.RecipeDto recipe);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipeDetails", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeDetailsResponse")]
        void AddRecipeDetails(RecipeBook.Data.RecipeService.RecipeDetailsDto details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/AddRecipeDetails", ReplyAction="http://tempuri.org/IRecipeService/AddRecipeDetailsResponse")]
        System.Threading.Tasks.Task AddRecipeDetailsAsync(RecipeBook.Data.RecipeService.RecipeDetailsDto details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateRecipeDetails", ReplyAction="http://tempuri.org/IRecipeService/UpdateRecipeDetailsResponse")]
        void UpdateRecipeDetails(RecipeBook.Data.RecipeService.RecipeDetailsDto details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/UpdateRecipeDetails", ReplyAction="http://tempuri.org/IRecipeService/UpdateRecipeDetailsResponse")]
        System.Threading.Tasks.Task UpdateRecipeDetailsAsync(RecipeBook.Data.RecipeService.RecipeDetailsDto details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/IsServerConnected", ReplyAction="http://tempuri.org/IRecipeService/IsServerConnectedResponse")]
        bool IsServerConnected();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecipeService/IsServerConnected", ReplyAction="http://tempuri.org/IRecipeService/IsServerConnectedResponse")]
        System.Threading.Tasks.Task<bool> IsServerConnectedAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecipeServiceChannel : RecipeBook.Data.RecipeService.IRecipeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecipeServiceClient : System.ServiceModel.ClientBase<RecipeBook.Data.RecipeService.IRecipeService>, RecipeBook.Data.RecipeService.IRecipeService {
        
        public RecipeServiceClient() {
        }
        
        public RecipeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecipeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecipeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RecipeBook.Data.RecipeService.RecipeDto[] GetRecipes() {
            return base.Channel.GetRecipes();
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesAsync() {
            return base.Channel.GetRecipesAsync();
        }
        
        public RecipeBook.Data.RecipeService.IngredientDto[] GetIngredients() {
            return base.Channel.GetIngredients();
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.IngredientDto[]> GetIngredientsAsync() {
            return base.Channel.GetIngredientsAsync();
        }
        
        public RecipeBook.Data.RecipeService.RecipeDetailsDto GetDedails(int id) {
            return base.Channel.GetDedails(id);
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDetailsDto> GetDedailsAsync(int id) {
            return base.Channel.GetDedailsAsync(id);
        }
        
        public RecipeBook.Data.RecipeService.RecipeIngredientDto[] GetRecipeIngredients(int id) {
            return base.Channel.GetRecipeIngredients(id);
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeIngredientDto[]> GetRecipeIngredientsAsync(int id) {
            return base.Channel.GetRecipeIngredientsAsync(id);
        }
        
        public RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByIngredient(string ingredientName) {
            return base.Channel.GetRecipesByIngredient(ingredientName);
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByIngredientAsync(string ingredientName) {
            return base.Channel.GetRecipesByIngredientAsync(ingredientName);
        }
        
        public RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByName(string recipeName) {
            return base.Channel.GetRecipesByName(recipeName);
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByNameAsync(string recipeName) {
            return base.Channel.GetRecipesByNameAsync(recipeName);
        }
        
        public RecipeBook.Data.RecipeService.RecipeDto[] GetRecipesByCategory(string categoryName) {
            return base.Channel.GetRecipesByCategory(categoryName);
        }
        
        public System.Threading.Tasks.Task<RecipeBook.Data.RecipeService.RecipeDto[]> GetRecipesByCategoryAsync(string categoryName) {
            return base.Channel.GetRecipesByCategoryAsync(categoryName);
        }
        
        public void AddIngredient(RecipeBook.Data.RecipeService.IngredientDto ingredient) {
            base.Channel.AddIngredient(ingredient);
        }
        
        public System.Threading.Tasks.Task AddIngredientAsync(RecipeBook.Data.RecipeService.IngredientDto ingredient) {
            return base.Channel.AddIngredientAsync(ingredient);
        }
        
        public void DeleteIngredient(int ingredientId) {
            base.Channel.DeleteIngredient(ingredientId);
        }
        
        public System.Threading.Tasks.Task DeleteIngredientAsync(int ingredientId) {
            return base.Channel.DeleteIngredientAsync(ingredientId);
        }
        
        public void UpdateIngredient(RecipeBook.Data.RecipeService.IngredientDto ingredient) {
            base.Channel.UpdateIngredient(ingredient);
        }
        
        public System.Threading.Tasks.Task UpdateIngredientAsync(RecipeBook.Data.RecipeService.IngredientDto ingredient) {
            return base.Channel.UpdateIngredientAsync(ingredient);
        }
        
        public void AddRecipeIngredient(RecipeBook.Data.RecipeService.RecipeIngredientDto recipeIngredient) {
            base.Channel.AddRecipeIngredient(recipeIngredient);
        }
        
        public System.Threading.Tasks.Task AddRecipeIngredientAsync(RecipeBook.Data.RecipeService.RecipeIngredientDto recipeIngredient) {
            return base.Channel.AddRecipeIngredientAsync(recipeIngredient);
        }
        
        public void DeleteRecipeIngredient(int recipeId, int ingredientId) {
            base.Channel.DeleteRecipeIngredient(recipeId, ingredientId);
        }
        
        public System.Threading.Tasks.Task DeleteRecipeIngredientAsync(int recipeId, int ingredientId) {
            return base.Channel.DeleteRecipeIngredientAsync(recipeId, ingredientId);
        }
        
        public void DeleteRecipeIngredients(int recipeId) {
            base.Channel.DeleteRecipeIngredients(recipeId);
        }
        
        public System.Threading.Tasks.Task DeleteRecipeIngredientsAsync(int recipeId) {
            return base.Channel.DeleteRecipeIngredientsAsync(recipeId);
        }
        
        public int AddRecipe(RecipeBook.Data.RecipeService.RecipeDto recipe) {
            return base.Channel.AddRecipe(recipe);
        }
        
        public System.Threading.Tasks.Task<int> AddRecipeAsync(RecipeBook.Data.RecipeService.RecipeDto recipe) {
            return base.Channel.AddRecipeAsync(recipe);
        }
        
        public void DeleteRecipe(int recipeId) {
            base.Channel.DeleteRecipe(recipeId);
        }
        
        public System.Threading.Tasks.Task DeleteRecipeAsync(int recipeId) {
            return base.Channel.DeleteRecipeAsync(recipeId);
        }
        
        public void UpdateRecipe(RecipeBook.Data.RecipeService.RecipeDto recipe) {
            base.Channel.UpdateRecipe(recipe);
        }
        
        public System.Threading.Tasks.Task UpdateRecipeAsync(RecipeBook.Data.RecipeService.RecipeDto recipe) {
            return base.Channel.UpdateRecipeAsync(recipe);
        }
        
        public void AddRecipeDetails(RecipeBook.Data.RecipeService.RecipeDetailsDto details) {
            base.Channel.AddRecipeDetails(details);
        }
        
        public System.Threading.Tasks.Task AddRecipeDetailsAsync(RecipeBook.Data.RecipeService.RecipeDetailsDto details) {
            return base.Channel.AddRecipeDetailsAsync(details);
        }
        
        public void UpdateRecipeDetails(RecipeBook.Data.RecipeService.RecipeDetailsDto details) {
            base.Channel.UpdateRecipeDetails(details);
        }
        
        public System.Threading.Tasks.Task UpdateRecipeDetailsAsync(RecipeBook.Data.RecipeService.RecipeDetailsDto details) {
            return base.Channel.UpdateRecipeDetailsAsync(details);
        }
        
        public bool IsServerConnected() {
            return base.Channel.IsServerConnected();
        }
        
        public System.Threading.Tasks.Task<bool> IsServerConnectedAsync() {
            return base.Channel.IsServerConnectedAsync();
        }
    }
}
