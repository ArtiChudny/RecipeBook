@model RecipeBook.Web.Models.RecipeViewModel

@{
    ViewBag.Title = "AddRecipe";
}

<h2>Add new recipe</h2>


@using (Html.BeginForm("AddRecipe", "Editor", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RecipeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipeName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group upload-block">
            @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label for="image-upload" class="file-upload">
                    <span class="glyphicon glyphicon-upload"></span> Upload
                </label>
                <input id="image-upload" type="file" name="upload" />
                <input type="text" id="filename" class="filename" disabled>
            </div>            
        </div>

        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.categories, "CategoryId", "CategoryName"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookingTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookingTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookingTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookingTemperature, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookingTemperature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookingTemperature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Steps, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Steps, 7, 50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Steps, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="ingredientBlock" class="form-group">
            <h3 class="col-md-offset-3">Ingredients:</h3>
            <br />
            <div class="ingredientItem">
                @Html.Label("Ingredient №1", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Ingredients[0].IngredientId, new SelectList(ViewBag.ingredients, "IngredientId", "IngredientName"), new { @class = "form-control" })
                </div>
                @Html.Label("Weight", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ingredients[0].Weight, new { htmlAttributes = new { @class = "form-control" } })
                    <br />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="+ Add new ingredient" id="addLink" class="btn btn-success btn-block" />
                <br />
                <hr style="width:30%; float:left;" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary btn-block" />
            </div>
        </div>


        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
}



@section Scripts {
    <script type="text/javascript">

        $(function () {
            var i = 0;
            $('#addLink').click(function () {
                i++;
                var ingredientBlockHTML =
            "<div class='ingredientItem'>" +
            "<label class='control-label col-md-2'>Ingredient №" + (i + 1) + " </label>" +
            "<div class='col-md-10'>" +
            "<select class='form-control' data-val='true' id='Ingredients_" + i + "__IngredientId' name='Ingredients[" + i + "].IngredientId'>" +
            "</select>" +
            "</div>" +
            "<label class='control-label col-md-2'>Weight</label>" +
            "<div class='col-md-10'>" +
            "<input class='form-control' type='text' name='Ingredients[" + i + "].Weight'/>" +
             "<br />" +
            "</div>" +
            "</div>";

                var ingredientBlock = $(ingredientBlockHTML);
                ingredientBlock.find("select").html($(".ingredientItem select").eq(0).html());
                $('#ingredientBlock').append(ingredientBlock);
            })
        })

        $(document).ready(function () {
            $(".upload-block input[type=file]").change(function () {
                var filename = $(this).val().replace(/.*\\/, "");
                $("#filename").val(filename);
            });
        });
    </script>
}
