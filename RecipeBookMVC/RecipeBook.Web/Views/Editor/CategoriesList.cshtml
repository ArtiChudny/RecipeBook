@model PagedList.IPagedList<RecipeBook.Common.Models.Category>
@using PagedList.Mvc;

@{
    var ajaxOptions = new AjaxOptions { UpdateTargetId = "results" };
}

<div class="list-header">
    <h3>All categories </h3>
    @Html.ActionLink("Add new", "AddCategory", "", new { @class = "btn btn-primary btn-add" })
</div>

<table class="table table-striped  table-condensed table-hover">

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                <div class="float-right">
                    @Html.ActionLink("Edit", "EditCategory", new { id = item.CategoryId }, new { @class = "btn btn-warning" })
                    @Ajax.ActionLink("Delete", "DeleteCategory", new { id = item.CategoryId }, ajaxOptions, new { @class = "btn btn-danger" })
                </div>
            </td>

        </tr>
    }
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("CategoriesList", new { page = page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "results" }))






